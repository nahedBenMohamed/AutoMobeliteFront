// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id                  Int      @id @default(autoincrement())
  name                String   @db.VarChar(100)
  firstName           String   @db.VarChar(100)
  email               String   @unique @db.VarChar(100)
  password            String   @db.VarChar(200)
  role                String   @default("client")
  createdAt           DateTime @default(now()) @map(name: "created_at")
  updatedAt           DateTime @default(now()) @map(name: "updated_at")
  responsibleAgencies Agency[] @relation("AgencyResponsibleUser") // Relation inverse vers les agences dont l'utilisateur est responsable
}

model Agency {
  id                Int       @id @default(autoincrement())
  name              String    @db.VarChar(100)
  email             String    @unique @db.VarChar(100)
  tel               String    @db.VarChar(50)
  location          String    @db.VarChar(200)
  createdAt         DateTime  @default(now()) @map(name: "created_at")
  updatedAt         DateTime  @default(now()) @map(name: "updated_at")
  vehicles          Vehicle[]
  responsibleUserId Int? // Nouveau champ pour l'ID de l'utilisateur responsable
  responsibleUser   User?     @relation("AgencyResponsibleUser", fields: [responsibleUserId], references: [id])
}

model Vehicle {
  id            Int      @id @default(autoincrement())
  brand         String   @db.VarChar(36)
  model         String   @db.VarChar(36)
  matricule     String   @unique @db.VarChar(100)
  kilometer     String   @db.VarChar(36)
  year          Int
  price         Int
  color         String   @db.VarChar(36)
  disponibilite String   @default("oui")
  createdAt     DateTime @default(now()) @map(name: "created_at")
  updatedAt     DateTime @default(now()) @map(name: "updated_at")
  agencyId      Int
  agency        Agency   @relation(fields: [agencyId], references: [id])
}
